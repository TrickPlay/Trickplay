Topic: Add Button Group

Our demonstration program will enable the user to select a desired language by clicking an appropriate button. First we'll define the buttons, then we'll arrange and align them into a clean design, and finally, we'll define focus navigation routes so users can use the keyboard to move to the desired button.

Define the Buttons:
We'll organize the buttons by grouping them within their own area of the screen. Using the same technique that we used to define the screen layout using Rectangle elements, we will use another Rectangle element to group the buttons.

Create a Rectangle element that is placed roughly in the center of the main display area. This will be the area where we store our buttons. Right-click the rectangle to display its Inspector dialog. Set the properties to the following values.

- Object Name: RectButtonGroup
- X, Y, Z: 600, 250, 0
- W, H: 700, 500
- Opacity: 100

Next create a button by selecting the Edit->Insert UI Element menu item and clicking the item marked Button in the displayed dialog box. A new button element will be created in the Editor workspace. Drag the new button so that it is contained within the rectangle you just created.

We will need a total of five buttons, but each will share some common property values, such as their size. If we set these common properties now, we'll be able to carry them over to the new buttons when they are created, thereby saving us some time setting properties in the Inspector. Here is the process: First, right-click the button to display its Inspector. Then set the common properties that each of the subsequent buttons will share.

- W, H: 500, 60
- Skin: OOBE
- Text Font: DejaVu Sans 40px

Click the OK button to accept the settings. Then, with the button selected, press the <D> key to duplicate the element. A new button will be created that will have the same property settings as the original button.

With a button selected, press <D> again until you have a total of five buttons. Position four of the buttons vertically, one above the other, within the button rectangle area, and place the fifth button outside of the button area, below all the other buttons. The buttons do not need to be precisely aligned; we'll have the Editor align them accurately later.

Your screen should look similar to the figure shown below.

(see images/EdButtonGroupRaw.png)

Each of the four buttons in the button area will specify a different language that the user will be able to choose. Right-click the top button to display its Inspector. Set its following properties.

- Object Name: ButtonEnglish
- Label: English

Perform the same task for each of the remaining buttons in the button area, assigning a unique name and label/language for each. Suggested values for each button are shown below.

Spanish language button
- Object Name: ButtonSpanish
- Label: Spanish

Chinese language button
- Object Name: ButtonChinese
- Label: Chinese

Korean language button
- Object Name: ButtonKorean
- Label: Korean

The fifth button outside of the button area, will be used to enable the user to accept the selected language and continue on to the next screen. Appropriate settings for this button are shown below.

- ObjectName: ButtonContinue
- Label: Continue

Your buttons should look something like this.

(see images/EdButtonGroupLabeled.png)


Align the Buttons:
The buttons exist, but they are not placed nicely on the screen. We'll use the SDK Visual Editor to align them for us. To do this, we'll manually position the top and bottom buttons within the button area and then instruct the Editor to align the remaining buttons using the top and bottom buttons as "anchors."

First, click-and-drap the top English button to its desired position. The button should be located near the top of the button area with an equal amount of space on its left and right sides so that it appears centered. Alternatively, you can position the button by setting its X, Y, and Z coordinates in the Inspector dialog.

The English button will be used as our top anchor; all the remaining buttons should be located below this button. If they are not, re-position them now. Do not spend time precisely locating the other buttons; simply move them so they are all below the English button and in their desired order from top to bottom.

We will use the English button as our left anchor, as well. To accomplish this, all the remaining buttons, including the Continue button, should be positioned to the right of the English button.

Next, click-and-drag the bottom Korean button so that it is the desired distance from the bottom of the button area. This will be our bottom anchor.

Finally, position the Continue button outside of the button area. It should be centered roughly between the bottom of the button area and the top of the lower display area. The left-most edge of the Continue button should be noticeably to the right of the left edge of our left-anchor English button.

The screen should look similar to that shown below. The important button positions are

- the top anchor English button. All other buttons must be below the top anchor.
- the bottom anchor Korean button. All the other language buttons (but not the Continue button) must be above the bottom anchor.
- the left anchor English button. All other buttons (including the Continue button) must be to the right of the left anchor.

(see images/EdButtonGroupAnchors.png)

We will now align the four language buttons within the button area. First, select all four buttons by <Shift>-Clicking each one so they are multiply selected. Then, from the menu, select Arrange->Distribute:Vertically. The buttons will be equally distributed between the top anchor/English button and the bottom anchor/Korean button.

(see images/EdButtonGroupDistribVert.png)

To align the buttons along the left anchor/English button, select all five, including the Continue button, by <Shift>-Clicking each button individually. Then, from the menu, select Arrange->Align:Left. All the buttons will align along the left edge of the left anchor/English button.

(see images/EdButtonGroupAligned.png)

Define Keyboard Focus Navigation:
As the user tabs through a screen's UI elements, the keyboard focus, i.e., the element that will receive keyboard input, travels from one element to another. The order in which elements receive focus can be defined within the SDK Visual Editor. Each element can explicitly specify the next element that will receive focus depending upon the keystroke the user enters. This focus navigation can be defined in an element's Inspector dialog.

Select the English button, right-click to display its Inspector dialog, and scroll down to the "Focus Destination" section. In this area, you can define which UI element will receive focus depending upon which key a user presses, such as the <Up> or <Down> arrow keys on a computer keyboard or the <R>, <G>, <Y>, or <B> buttons on a TV remote control.

(see images/EdButtonGroupFocus.png)

The Focus Destination area contains two groups of buttons. The top group represents keystrokes on a computer keyboard that a user may enter to change focus. The bottom group are buttons on a TV remote control that can be pressed to alter focus. The buttons and the associated keystrokes are listed below.

_Computer_Keyboard_Keys_
- U: <Up> arrow key
- D: <Down> arrow key
- L: <Left> arrow key
- R: <Right> arrow key
- E: <Enter> key

_TV_Remote_Control_Buttons_
- R: <R> button
- G: <G> button
- Y: <Y> button
- B: <B> button

To assign focus, first click on one of the Inspector's keyboard/TV remote buttons in the Focus Destination area. Then to specify which element is to receive focus when the user presses that keystroke, click on the appropriate element in the SDK Visual Editor workspace. For example, in the Inspector dialog for the English button, when the user presses a <Down> arrow key, we want the focus to shift from the English button to the button immediately below it, the Spanish button. Thus, in the Focus Destination area of the English button's Inspector, press the <D> button for assignment of the <Down> arrow key. Then in the SDK Visual Editor's workspace, click the Spanish button. The Object Name of the Spanish button, ButtonSpanish, is automatically displayed beneath the Inspector's <D> button to indicate that the key has been assigned to that element. Similarly, the <Up> arrow can be defined to shift focus to the Continue button. First press the <U> button in the Inspector and then click on the Continue button in the Editor workspace. Assign focus destinations to any other keys and buttons that you wish, such as the TV remote buttons. Then click the OK button to close the Inspector dialog.

Appropriate focus destinations should be defined for each of the remaining buttons (Spanish, Chinese, Korean, and Continue) so that a user can cycle through all the focusable elements contained in the screen.

