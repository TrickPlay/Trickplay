[[
#include "common.h"
#include "util.h"
#include "app.h"
#include "context.h"
#include "actions.h"
]]

restricted global editor [[ void * ]]
{

      editor()
	[[
	     lb_construct_empty();
	]];


    /*
        Function: readdir

        List file names of the given directory name and returns them as a table. If
        there are any problems, it returns nil.

        Arguments:

                dir_name - The name of the directory to look up.

        Returns:
                table - The file names or 
                nil - If something went wrong.

    */

     table readdir(string dir_name)
        [[	
	    gchar *filename = NULL;
	    GDir *dir = NULL;

            dir = g_dir_open(dir_name, 0, NULL);

	    if(dir) 
	    {
		filename = (gchar *)g_dir_read_name(dir);
		lua_newtable( L );
		int t = lua_gettop( L );
		int i = 1; 
		while(filename != NULL)
		{
			lua_pushstring( L , filename );
   			lua_rawseti( L , t , i++ );  
			filename = (gchar *)g_dir_read_name(dir);
		}
	    	g_dir_close(dir);
	    }
	    else 
	    {
   		lua_pushnil( L );
	    }
         ]];

    /*
        Function: writefile

        List file names of the given directory name and returns them as a table. 

        Arguments:

                file_name - The name of the file to write
	        contents - The contents to write  
	        overwrite - The boolean values which determine whether 
			    the contents will be overwritten into the file 
			    default is true 
    */

     writefile(string file_name, string contents, bool overwrite=true)
         [[
	     bool is_uri=false;
             char * path=App::get(L)->normalize_path(file_name,&is_uri);
             gchar * old_contents = NULL;
             gsize old_length = 0;

             FreeLater free_later(path);

             if ( path && ! is_uri )
             {
             	 gsize length = strlen(contents);
		 if( overwrite == false && g_file_get_contents( path, & old_contents, & old_length, NULL ) )
                 {
                      length += old_length;
		      if (old_length != 0) 
		      {
                           gchar new_contents[length];
                           g_strlcpy(new_contents, old_contents, old_length+1);
                           g_strlcat(new_contents, contents, length+1);
                           g_file_set_contents(path, new_contents, length, NULL);
		      } 
		      else 
		      {
                           g_file_set_contents(path, contents, length, NULL);
		      }
                 } 
		 else 
		 {
                 	   g_file_set_contents(path, contents, length, NULL);
                           length += old_length;
                 }
             }
          ]];


}

