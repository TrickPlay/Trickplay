module clutter_clone;

[[
#include "clutter/clutter.h"

#include "util.h"
#include "clutter_util.h"
]]

/*
    Class: Clone
  
  	A clone is a <UIElement> that "mirrors" another one. To use a clone, you create another
  	<UIElement>, add it to the screen and then create a clone of it. A common trick is to
  	add the element to be cloned to the screen and set its opacity to 0, so it won't be visible.
*/

class Clone [[ClutterActor*]] actor
{
    Clone(table props = 0)
        [[
            self = clutter_clone_new(NULL);
            g_object_ref_sink( self );
            g_object_ref( self );
            self = lb_construct_gobject( ClutterActor , self );
            
		    ClutterUtil::initialize_actor(L,self,CLONE_METATABLE);
		    ClutterUtil::set_props_from_table(L,props);
		    g_object_unref( self );
        ]];
	
    ~Clone()
		[[
		]];
		
	/*
		Property: source
		
		This is the UIElement that the clone is "mirroring".  
	*/
        
    UIElement source
        [[
	    	ClutterUtil::wrap_concrete_actor(L,clutter_clone_get_source(CLUTTER_CLONE(self)));
        ]]
        [[
            ClutterActor* source=ClutterUtil::user_data_to_actor(L,2);
	        clutter_clone_set_source(CLUTTER_CLONE(self),source);
        ]];
}

