
[[
#include "controller_delegates.h"
]]

#==============================================================================
/*
	Global: controllers
	
	Controllers are human interface devices. The simple examples are the keyboard
	on the TrickPlay emulator or the remote control on a TV. TrickPlay also supports
	clients that run on other devices and connect to TrickPlay to act as controllers.
	
	The controllers global lets you enumerate all the controllers that are currently
	connected, using the <connected> property. You can also be notified when a new 
	controller is connected by using the <on_controller_connected> event.
*/

global controllers [[ControllerListDelegate*]]
{
    controllers()
        [[
            self=lb_construct( ControllerListDelegate , new ControllerListDelegate(L) );            
        ]];
        
    ~controllers()
        [[
            delete self;
        ]];
        
    /*
    	Property: connected
    	
    	This property returns a table of <controller> objects containing all the 
    	controllers that are currently connected.
    */
    
    readonly table connected
        [[
            self->push_connected();
        ]];
    
    /*
       Function: start_pointer

       A convenience function that tells all connected controllers to start
       sending pointer events.
    */

    start_pointer()
        [[
            self->start_pointer();
        ]];

    /*
    	Event: on_controller_connected
    	
    	This event happens any time a new controller connects to TrickPlay.
    	
    	Arguments:
    	
    		controllers - The <controllers> global.
    		
    		controller - The <controller> that connected.
    */    
    
    callback on_controller_connected;    
}

#==============================================================================

[[

]]

#==============================================================================
