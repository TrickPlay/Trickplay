Index: clutter-1.0.8/clutter/cogl/gles/cogl-gles2-wrapper.c
===================================================================
--- clutter-1.0.8.orig/clutter/cogl/gles/cogl-gles2-wrapper.c	2010-11-18 10:50:16.242957367 +0900
+++ clutter-1.0.8/clutter/cogl/gles/cogl-gles2-wrapper.c	2010-11-18 13:57:23.746957367 +0900
@@ -451,9 +451,11 @@
   uniforms->modelview_matrix_uniform
     = glGetUniformLocation (program, "modelview_matrix");
 
+printf("%s]]]  Looping on locations\n",__FUNCTION__);
   for (i = 0; i < COGL_GLES2_MAX_TEXTURE_UNITS; i++)
     if (COGL_GLES2_TEXTURE_UNIT_IS_ENABLED (settings->texture_units, i))
       {
+	printf("%s]]]  Texture unit %d is enabled\n",__FUNCTION__,i);
         char *matrix_var_name = g_strdup_printf ("texture_matrix[%d]", i);
         char *sampler_var_name = g_strdup_printf ("texture_unit[%d]", i);
         char *tex_coord_var_name =
@@ -472,6 +474,7 @@
       }
     else
       {
+	printf("%s]]]  Texture unit %d is disabled\n",__FUNCTION__,i);
         uniforms->texture_matrix_uniforms[i] = -1;
         uniforms->texture_sampler_uniforms[i] = -1;
         attribs->multi_texture_coords[i] = -1;
@@ -1076,12 +1079,32 @@
 cogl_wrap_prepare_for_draw (void)
 {
   CoglGles2WrapperProgram *program;
+  GLuint old_attribs[COGL_GLES2_MAX_TEXTURE_UNITS];
+  int was_enabled[COGL_GLES2_MAX_TEXTURE_UNITS];
+  int was_dirty=0;
+  
 
   _COGL_GET_GLES2_WRAPPER (w, NO_RETVAL);
 
   /* Check if we need to switch programs */
   if (w->settings_dirty)
     {
+
+      was_dirty = 1;
+      int i;
+      /* First need to save old attributes since new program might not use them */
+      for (i = 0; i < COGL_GLES2_MAX_TEXTURE_UNITS; i++)
+	{
+        	  {
+		  CoglGles2WrapperTextureUnit *texture_unit
+	            = w->texture_units + w->active_texture_unit;
+	          old_attribs[i] = program->attributes.multi_texture_coords[i];
+		  was_enabled[i] = COGL_GLES2_TEXTURE_UNIT_IS_ENABLED (w->settings.texture_units, i);
+//			printf("Disabling Vertex Attrib: %d\n",old_attribs[i]);
+//	          if(old_attribs[i] != -1 ) glDisableVertexAttribArray (old_attribs[i]);
+		}
+	}
+
       /* Find or create a program for the current settings */
       program = cogl_gles2_wrapper_get_program (&w->settings);
 
@@ -1231,8 +1254,17 @@
                                    texture_unit->texture_coords_stride,
                                    texture_unit->texture_coords_pointer);
           }
+	else if(was_dirty)
+	  {
+		// Disable old ones that aren't used any more
+		if(was_enabled[i] && old_attribs[i] != -1)
+		{
+			printf("Disabling old vertex attribs: %p\n",old_attribs[i]);
+			glDisableVertexAttribArray(old_attribs[i]);
+		}
+	  }
     }
-
+printf("About to do enable/disables: %d\n",w->dirty_vertex_attrib_enables);
   if (w->dirty_vertex_attrib_enables)
     {
       int i;
@@ -1247,6 +1279,7 @@
             = w->texture_units + w->active_texture_unit;
           GLint attrib = program->attributes.multi_texture_coords[i];
 
+	printf("enable/disable: attrib=%d ==> %d\n",attrib,texture_unit->texture_coords_enabled);
           if (attrib != -1)
             {
               if (texture_unit->texture_coords_enabled)
