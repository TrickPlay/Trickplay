Index: clutter-1.0.8/clutter/cogl/common/cogl-material.c
===================================================================
--- clutter-1.0.8.orig/clutter/cogl/common/cogl-material.c	2010-11-15 16:45:46.560000899 +0900
+++ clutter-1.0.8/clutter/cogl/common/cogl-material.c	2010-11-15 19:07:44.000000000 +0900
@@ -1191,6 +1191,8 @@
       GE (glTexEnvi (GL_TEXTURE_ENV,
                      GL_COMBINE_ALPHA,
                      layer->texture_combine_alpha_func));
+      g_debug("Setting GL_COMBINE_RGB to %x", layer->texture_combine_rgb_func);
+      g_debug("Setting GL_COMBINE_ALPHA to %x", layer->texture_combine_alpha_func);
 
       /*
        * Setup the function arguments...
@@ -1204,12 +1206,16 @@
                      layer->texture_combine_rgb_src[0]));
       GE (glTexEnvi (GL_TEXTURE_ENV, GL_OPERAND0_RGB,
                      layer->texture_combine_rgb_op[0]));
+      g_debug("Setting GL_SRC0_RGB to %x", layer->texture_combine_rgb_src[0]);
+      g_debug("Setting GL_OPERAND0_RGB to %x", layer->texture_combine_rgb_op[0]);
       if (n_rgb_func_args > 1)
         {
           GE (glTexEnvi (GL_TEXTURE_ENV, GL_SRC1_RGB,
                          layer->texture_combine_rgb_src[1]));
           GE (glTexEnvi (GL_TEXTURE_ENV, GL_OPERAND1_RGB,
                          layer->texture_combine_rgb_op[1]));
+      g_debug("Setting GL_SRC1_RGB to %x", layer->texture_combine_rgb_src[1]);
+      g_debug("Setting GL_OPERAND1_RGB to %x", layer->texture_combine_rgb_op[1]);
         }
       if (n_rgb_func_args > 2)
         {
@@ -1217,6 +1223,8 @@
                          layer->texture_combine_rgb_src[2]));
           GE (glTexEnvi (GL_TEXTURE_ENV, GL_OPERAND2_RGB,
                          layer->texture_combine_rgb_op[2]));
+      g_debug("Setting GL_SRC2_RGB to %x", layer->texture_combine_rgb_src[2]);
+      g_debug("Setting GL_OPERAND2_RGB to %x", layer->texture_combine_rgb_op[2]);
         }
 
       /* For the Alpha component */
@@ -1227,12 +1235,16 @@
                      layer->texture_combine_alpha_src[0]));
       GE (glTexEnvi (GL_TEXTURE_ENV, GL_OPERAND0_ALPHA,
                      layer->texture_combine_alpha_op[0]));
+      g_debug("Setting GL_SRC0_ALPHA to %x", layer->texture_combine_alpha_src[0]);
+      g_debug("Setting GL_OPERAND0_ALPHA to %x", layer->texture_combine_alpha_op[0]);
       if (n_alpha_func_args > 1)
         {
           GE (glTexEnvi (GL_TEXTURE_ENV, GL_SRC1_ALPHA,
                          layer->texture_combine_alpha_src[1]));
           GE (glTexEnvi (GL_TEXTURE_ENV, GL_OPERAND1_ALPHA,
                          layer->texture_combine_alpha_op[1]));
+      g_debug("Setting GL_SRC1_ALPHA to %x", layer->texture_combine_alpha_src[1]);
+      g_debug("Setting GL_OPERAND1_ALPHA to %x", layer->texture_combine_alpha_op[1]);
         }
       if (n_alpha_func_args > 2)
         {
@@ -1240,6 +1252,8 @@
                          layer->texture_combine_alpha_src[2]));
           GE (glTexEnvi (GL_TEXTURE_ENV, GL_OPERAND2_ALPHA,
                          layer->texture_combine_alpha_op[2]));
+      g_debug("Setting GL_SRC2_ALPHA to %x", layer->texture_combine_alpha_src[2]);
+      g_debug("Setting GL_OPERAND2_ALPHA to %x", layer->texture_combine_alpha_op[2]);
         }
 
       GE (glTexEnvfv (GL_TEXTURE_ENV, GL_TEXTURE_ENV_COLOR,
