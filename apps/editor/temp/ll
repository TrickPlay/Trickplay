10c10
< 				   ["buttonpciker_left_sel"] = "assets/leftfocus.png",
---
> 				   ["buttonpicker_left_sel"] = "assets/leftfocus.png",
556c556
< 		skin - Modify the skin for the button by changing this value
---
> 	skin - Modify the skin for the button by changing this value
570,571d569
< 
< 
576,578c574,576
< 	on_focus_out() - Releases the button focus
< 	on_focus_in() - Grabs the button focus
< 	
---
> 	on_focus_out()   - Releases the button focus
> 	on_focus_in()    - Grabs the button focus
> 	on_button_down() - Handles mouse event  
599,600c597,599
< 	on_pressed = nil, 
< 	on_released = nil, 
---
> 	--on_pressed = nil, 
> 	--on_released = nil, 
> 
639c638
<             button:set{name="button", position = { 0 , 0 } , size = { p.wwidth , p.wheight } , opacity = 255}
---
>             button:set{name="button", position = { 0 , 0 } , size = { p.wwidth , p.wheight } , opacity = 255, reactive = true}
669d667
< 
682c680
<         end
---
>         end 
686d683
<  
688c685,696
< 	
---
> 
> --[[
>     function b_group:on_button_down(x,y,b,n) 
> 	print("button:on_button_down()")
> 	if ring.opacity == 255 or button.opacity == 255 then 
> 	     b_group.on_focus_out()
> 	else 
> 	     b_group.on_focus_in()
> 	end 
> 	return true
>     end 
> ]]	
1168c1176
< 		rotate_func - Table of functions that is called by selected item number   
---
> 	rotate_func - Table of functions that is called by selected item number   
1183a1192
> 
1376,1379d1384
< 			if p.rotate_func then
< 	       		     p.rotate_func(next_i)
< 	    		end
< 
1382c1387,1390
< 	   
---
> 	    if p.item_func then
> 	      -- p.item_func(next_i,prev_i)
> 	    end
> 
1433,1435d1440
< 		if p.rotate_func then
< 	       	     p.rotate_func(next_i)
< 	    	end
1437a1443,1445
> 	    --if p.item_func then
> 	       -- p.item_func(next_i,prev_i)
> 	    --end
1518c1526,1527
< 	rotate_func - function that is called by selceted item number
---
> 	direction - Option of list direction (1=Vertical, 2=Horizontal)
> 	rotate_func - Table of functions that is called by selceted item number
1548,1549c1557,1558
< 	rotate_func = nil, 
< 	direction = 1, 
---
> 	rotate_func = {}, 
> 	direction = 2,
1582d1590
<          --rb_group.size = { p.wwidth , p.wheight},
1620,1625d1627
<      function rb_group.extra.select_button(item_n) 
< 	    p.selected_item = item_n
<             if p.rotate_func then
< 	       p.rotate_func(p.selected_item)
< 	    end
<      end 
1671c1673
< 		skin - Modify the skin for the button by changing this value   
---
> 	skin - Modify the skin for the button by changing this value   
1674c1676
< 		items - Table of Check box items
---
> 	items - Table of Check box items
1677,1680c1679,1682
< 		box_color - Color of the Check box border 
< 		f_color - the color of the Check box 
< 		box_width - Width of Check box border
< 		box_size - The size of Check box 
---
> 	box_color - Color of the Check box border 
> 	f_color - the color of the Check box 
> 	box_width - Width of Check box border
> 	box_size - The size of Check box 
1682,1688c1684,1689
< 		box_pos - Postion of the group of check boxes
< 		item_pos - Position of the group of text items 
< 		line_space - Space between the text items 
< 		selected_item - Selected item's number 
< 		rotate_func - function that is called by selected item number   
< 		direction - Option of list direction (1=Vertical, 2=Horizontal)
< 
---
> 	box_pos - Postion of the group of check boxes
> 	item_pos - Position of the group of text items 
> 	line_space - Space between the text items 
> 	selected_item - Selected item's number 
> 	rotate_func - Table of functions that is called by selected item number   
> 	direction - Option of list direction (1=Vertical, 2=Horizontal)
1717,1719c1718,1720
< 	selected_item = {1, 3},  
< 	direction = 2, 
< 	rotate_func = {},  
---
> 	selected_items = {1, 3},  
> 	direction = 2, -- horizontal : 2, vertical : 1
> 	rotate_func = {}, 
1745d1745
< 
1750a1751
> 
1763c1764
<          local pos = {0, 0}
---
> 	 local pos = {0, 0}
1785c1786
< 	 for i,j in pairs(p.selected_item) do 
---
> 	 for i,j in pairs(p.selected_items) do 
