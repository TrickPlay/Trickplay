.TH stitcher 1

.SH NAME

stitcher - a tool to stitch together many source sprites into a single spritesheet

.SH SYNOPSIS

stitcher INPUT ... [-h] [-B] [-i FILTER] [-g ID] [-m PATH] [-o PATH] [-s INT] [-t INT]

.SH INPUTS
stitcher will accept a list of directories and/or images, and things that might be convertible to images (ie. SVG). Experiment to see what input formats work for your case.

.SH EXAPLES

.TP 5

stitcher assets/ui
Will pick up all of the images in the directory assets/ui and create two files, assets/ui.png (one PNG of all the input images packed together) and assets/ui.json, a JSON map to each of the packed images. Load this map into TrickPlay as:
    ui = SpriteSheet { map = 'assets/ui.json' }
.br
Then create sprites from it:
    sprite = Sprite { sheet = ui, id = 'button-press.png' }
.br
Sprites behave just as if they were loaded from the original image.

.TP

stitcher assets/ui special-image.jpg -i *.png nav/bg-?.jpg -s 256
Load all PNGs plus JPGs whose filenames match 'nav/bg-?.jpg'. 'special-image.jpg' doesn't match either filter, but will be included since it was named directly. Additionally, images bigger than 256 pixels on a side will be placed in their own seperate textures.

.TP

stitcher assets/ui -o sprites/ui -t 512
Output the JSON map as sprites/ui.json, and ensure that the spritesheets will not use textures larger than 512 x 512 pixels.

.TP

stitcher assets/ui -m assets/old-ui-1.json -m assets/old-ui-2.json
-m merges an existing spritesheet into the output. This can be used when a previously created spritesheet, for example, needs to be updated.

.TP

stitcher path/image1.png path/image2.png ... -m assets/ui.json -g unused-image.png -o assets/ui
Merge a list of new assets into a current spritesheet, and ignore an image that's no longer used.

.SH OPTIONS

.TP 5

-h, --help
Show option help and exit.

.TP

-B, --no-buffer-pixels
Do not place buffer pixels around sprite edges.

.TP

-g ID, --ignore=ID
Id of a sprite (ie., its path within its original source directory) to ignore or forget; this is most useful when you want to merge entire spritesheets except for certain images (see -m)

.TP

-i FILTER, --input-name-filter=FILTER
Inclusive wildcard (?, *) filter for files within input directories (default: *); multiple filters can be passed, in which case files will be included if they match at least one filter

.TP

-m PATH, --merge-json=PATH
Path to the JSON file of a spritesheet to merge into this one

.TP

-o PATH, --output-prefix=PATH
Path and prefix for the spritesheet files created

.TP

-r, --recursive
Recursively include subdirectories.

.TP

-s INT, --size-segregation=INT
Size segregation threshhold (default 512); images larger than this will be placed in their own seperate textures

.TP

-t INT, --max-texture-size=INT
Maximum texture size the spritesheet will try to use (default: 4096)
