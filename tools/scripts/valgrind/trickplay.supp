#
# Valgrind suppression file for Gtk+ 2.12
#
# Format specification:
# http://valgrind.org/docs/manual/manual-core.html#manual-core.suppress
#

#
# glibc Ubuntu Edgy
#

{
   libc: getpwnam_r
   Memcheck:Addr4
   obj:/lib/ld-*.so
   obj:/lib/ld-*.so
   obj:/lib/ld-*.so
   obj:/lib/ld-*.so
   obj:/lib/ld-*.so
   obj:/lib/ld-*.so
   obj:/lib/tls/i686/cmov/libc-*.so
   obj:/lib/ld-*.so
   fun:__libc_dlopen_mode
   fun:__nss_lookup_function
   obj:/lib/tls/i686/cmov/libc-*.so
   fun:__nss_passwd_lookup
   fun:getpwnam_r
   fun:g_get_any_init_do
   fun:g_get_home_dir
   fun:gtk_rc_add_initial_default_files
   fun:_gtk_rc_init
   fun:post_parse_hook
   fun:g_option_context_parse
   fun:gtk_parse_args
   fun:gtk_init_check
   fun:gtk_init
}

{
   libc: getpwnam_r
   Memcheck:Addr4
   obj:/lib/ld-*.so
   obj:/lib/ld-*.so
   obj:/lib/ld-*.so
   obj:/lib/ld-*.so
   obj:/lib/ld-*.so
   obj:/lib/ld-*.so
   obj:/lib/tls/i686/cmov/libc-*.so
   obj:/lib/ld-*.so
   fun:__libc_dlopen_mode
   fun:__nss_lookup_function
   obj:/lib/tls/i686/cmov/libc-*.so
   fun:__nss_passwd_lookup
   fun:getpwnam_r
   fun:g_get_any_init_do
   fun:g_get_home_dir
   fun:gtk_rc_add_initial_default_files
   fun:_gtk_rc_init
   fun:post_parse_hook
   fun:g_option_context_parse
   fun:gtk_parse_args
   fun:gtk_init_check
   fun:gtk_init
}

{
   libc: getpwnam_r
   Memcheck:Addr4
   obj:/lib/ld-*.so
   obj:/lib/ld-*.so
   obj:/lib/ld-*.so
   obj:/lib/ld-*.so
   obj:/lib/ld-*.so
   obj:/lib/ld-*.so
   obj:/lib/ld-*.so
   obj:/lib/ld-*.so
   obj:/lib/ld-*.so
   obj:/lib/tls/i686/cmov/libc-*.so
   obj:/lib/ld-*.so
   fun:__libc_dlopen_mode
   fun:__nss_lookup_function
   fun:__nss_next
   fun:getpwnam_r
   fun:g_get_any_init_do
   fun:g_get_home_dir
   fun:gtk_rc_add_initial_default_files
   fun:_gtk_rc_init
   fun:post_parse_hook
   fun:g_option_context_parse
   fun:gtk_parse_args
   fun:gtk_init_check
   fun:gtk_init
}

{
   libc: getpwnam_r
   Memcheck:Addr4
   obj:/lib/ld-*.so
   obj:/lib/ld-*.so
   obj:/lib/ld-*.so
   obj:/lib/ld-*.so
   obj:/lib/ld-*.so
   obj:/lib/ld-*.so
   obj:/lib/tls/i686/cmov/libc-*.so
   obj:/lib/ld-*.so
   fun:__libc_dlopen_mode
   fun:__nss_lookup_function
   fun:__nss_next
   fun:getpwnam_r
   fun:g_get_any_init_do
   fun:g_get_home_dir
   fun:gtk_rc_add_initial_default_files
   fun:_gtk_rc_init
   fun:post_parse_hook
   fun:g_option_context_parse
   fun:gtk_parse_args
   fun:gtk_init_check
   fun:gtk_init
}

#
# glibc Ubuntu feisty
#

{
   getpwnam_r
   Memcheck:Leak
   fun:malloc
   obj:/lib/libc-2.5.so
   fun:__nss_database_lookup
   obj:*
   obj:*
   fun:getpwnam_r
}

#
# X
#

{
   XSupportsLocale
   Memcheck:Addr4
   obj:/lib/ld-*.so
   obj:/lib/tls/i686/cmov/libdl-*.so
   obj:/lib/ld-*.so
   obj:/lib/tls/i686/cmov/libdl-*.so
   fun:dlopen
   obj:/usr/lib/libX11.so.6.2.0
   fun:_XlcDynamicLoad
   fun:_XOpenLC
   fun:_XlcCurrentLC
   fun:XSupportsLocale
   fun:_gdk_x11_initialize_locale
   fun:_gdk_windowing_init
   fun:gdk_pre_parse_libgtk_only
   fun:pre_parse_hook
   fun:g_option_context_parse
   fun:gtk_parse_args
   fun:gtk_init_check
   fun:gtk_init
   fun:main
}


{
   Xcursor
   Memcheck:Leak
   fun:malloc
   obj:/usr/lib/libXcursor.so.1.0.2
   obj:/usr/lib/libXcursor.so.1.0.2
   fun:XcursorXcFileLoadImages
   fun:XcursorFileLoadImages
   fun:XcursorLibraryLoadImages
   fun:XcursorShapeLoadImages
   fun:XcursorTryShapeCursor
   fun:XCreateGlyphCursor
   fun:XCreateFontCursor
   fun:gdk_cursor_new_for_display
}

{
   XcursorGetTheme
   Memcheck:Leak
   fun:malloc
   fun:/usr/lib/libX11.so.6.2.0
   fun:/usr/lib/libX11.so.6.2.0
   fun:XrmGetStringDatabase
   fun:XGetDefault
   fun:_XcursorGetDisplayInfo
   fun:XcursorGetTheme
}

{
   XOpenDisplay
   Memcheck:Leak
   fun:calloc
   fun:XOpenDisplay
}

{
   XOpenDisplay
   Memcheck:Leak
   fun:malloc
   fun:XOpenDisplay
}

#
# fontconfig
#

{
   fontconfig
   Memcheck:Leak
   fun:realloc
   fun:FcPatternObjectInsertElt
   fun:FcPatternObjectAddWithBinding
}

{
   pango_fc_font_map_load_fontset
   Memcheck:Leak
   fun:malloc
   fun:FcLangSetCreate
   fun:FcLangSetCopy
   fun:FcValueSave
   fun:FcPatternObjectAddWithBinding
   fun:FcPatternObjectAdd
   fun:FcFontRenderPrepare
   fun:pango_fc_font_map_load_fontset
   fun:pango_font_map_load_fontset
}

{
   pango_font_map_load_fontset
   Memcheck:Leak
   fun:malloc
   fun:FcPatternObjectAddWithBinding
   fun:FcPatternObjectAdd
   fun:FcFontRenderPrepare
   fun:pango_fc_font_map_load_fontset
   fun:pango_font_map_load_fontset
}

{
   pango_fc_font_map_load_fontset
   Memcheck:Leak
   fun:malloc
   fun:FcStrStaticName
   fun:FcPatternObjectAddWithBinding
   fun:FcPatternObjectAdd
   fun:FcFontRenderPrepare
   fun:pango_fc_font_map_load_fontset
}

{
   pango_fc_font_map_list_families
   Memcheck:Leak
   fun:malloc
   fun:FcStrStaticName
   fun:FcPatternObjectAddWithBinding
   fun:FcPatternAdd
   fun:FcFontSetList
   fun:FcFontList
   fun:pango_fc_font_map_list_families
}

#
# freetype
#

{
   freetype FT_Init_FreeType
   Memcheck:Leak
   fun:malloc
   obj:/usr/lib/libfreetype.so.6.3.10
   fun:ft_mem_qalloc
   fun:ft_mem_alloc
   fun:FT_New_Library
   fun:FT_Init_FreeType
}

#
# glib
#

{
   glib g_rand_new
   Memcheck:Leak
   fun:calloc
   fun:g_malloc0
   fun:g_rand_new_with_seed_array
   fun:g_rand_new
   fun:g_random_int
}

##-----------------------------------------------------------------------------
## CLUTTER

{
   ioctl_1
   Memcheck:Param
   ioctl(generic)
   fun:ioctl
   fun:driDrawableInitVBlank
   fun:intelMakeCurrent
   fun:glXMakeContextCurrent
}

{
   ioctl_2
   Memcheck:Param
   ioctl(generic)
   fun:ioctl
   fun:driDrawableGetMSC32
   fun:clutter_backend_glx_redraw
}

{
   ioctl_3
   Memcheck:Param
   ioctl(generic)
   fun:ioctl
   fun:driWaitForMSC32
   fun:clutter_backend_glx_redraw
}

{
   mesa_init_context
   Memcheck:Leak
   fun:*alloc
   ...
   fun:glXCreateNewContext
}

{
   type_register
   Memcheck:Leak
   fun:*alloc
   ...
   fun:g_type_register_*
}

{
   type_ref
   Memcheck:Leak
   fun:*alloc
   ...
   fun:g_type_class_ref
}

{
   type_interface_prereq
   Memcheck:Leak
   fun:*alloc
   ...
   fun:g_type_interface_add_prerequisite
}

{
   get_charset
   Memcheck:Leak
   fun:*alloc
   ...
   fun:g_get_charset
}

{
   cogl_features
   Memcheck:Leak
   fun:*alloc
   ...
   fun:cogl_get_features
}

{
   glx_query_version
   Memcheck:Leak
   fun:*alloc
   ...
   fun:glXQueryVersion
}

{
   glx_create_context
   Memcheck:Leak
   fun:*alloc
   ...
   fun:glXCreateNewContext
}

{
   glx_make_current
   Memcheck:Leak
   fun:*alloc
   ...
   fun:glXMakeContextCurrent
}

{
   gl_draw_arrays
   Memcheck:Leak
   fun:*malloc
   ...
   fun:glDrawArrays
}

{
   cogl_clear
   Memcheck:Leak
   fun:*alloc
   ...
   fun:cogl_clear
}

{
   default_font
   Memcheck:Leak
   fun:*alloc
   ...
   fun:clutter_backend_get_font_name
}

{
   id_pool
   Memcheck:Leak
   fun:*alloc
   ...
   fun:clutter_id_pool_new
}

{
   x_open_display
   Memcheck:Leak
   fun:*alloc
   ...
   fun:XOpenDisplay
}

# ... and font descriptions from every "sans 12" type string
{
   pango_font_description_from_string
   Memcheck:Leak
   fun:*alloc
   ...
   fun:pango_font_description_from_string
}

# other lib init
{
   fontconfig_init
   Memcheck:Leak
   fun:*alloc
   ...
   fun:FcConfigParseAndLoad
}

{
   freetype_init
   Memcheck:Leak
   fun:*alloc
   ...
   fun:FT_Open_Face
}

{
   x_init_ext
   Memcheck:Leak
   fun:*alloc
   ...
   fun:XInitExtension
}


##-----------------------------------------------------------------------------
#
# Libsoup
#
##-----------------------------------------------------------------------------

{
   glib/g_type_init
   Memcheck:Leak
   ...
   fun:g_type_init
}
{
   glib/g_type_init_with_debug_flags
   Memcheck:Leak
   ...
   fun:g_type_init_with_debug_flags
}
{
   glib/g_thread_init
   Memcheck:Leak
   ...
   fun:g_thread_init
}
{
   glib/g_thread_init_glib
   Memcheck:Leak
   ...
   fun:g_thread_init_glib
}
{
   glib/g_type_register_static
   Memcheck:Leak
   ...
   fun:g_type_register_static
}
{
   glib/g_boxed_type_register_static
   Memcheck:Leak
   ...
   fun:g_boxed_type_register_static
}
{
   glib/g_type_add_interface_static
   Memcheck:Leak
   ...
   fun:g_type_add_interface_static
}
{
   glib/g_type_interface_add_prerequisite
   Memcheck:Leak
   ...
   fun:g_type_interface_add_prerequisite
}
{
   glib/g_type_class_ref
   Memcheck:Leak
   ...
   fun:g_type_class_ref
}
{
   glib/g_set_prgname
   Memcheck:Leak
   ...
   fun:g_set_prgname
}
{
   glib/g_intern_string
   Memcheck:Leak
   ...
   fun:g_intern_string
}
{
   glib/g_intern_static_string
   Memcheck:Leak
   ...
   fun:g_intern_static_string
}
{
   glib/g_quark_from_string
   Memcheck:Leak
   ...
   fun:g_quark_from_string
}
{
   glib/get_dispatch
   Memcheck:Leak
   ...
   fun:get_dispatch
}
{
   glib/g_signal_handlers_destroy
   Memcheck:Leak
   ...
   fun:g_signal_handlers_destroy
}
{
   glib/g_data_initialize
   Memcheck:Leak
   ...
   fun:g_data_initialize
}
{
   glib/g_static_private_set
   Memcheck:Leak
   ...
   fun:g_static_private_set
}
{
   glib/g_child_watch_source_init_multi_threaded
   Memcheck:Leak
   ...
   fun:g_child_watch_source_init_multi_threaded
}
{
   glib/xdg_mime_init
   Memcheck:Leak
   ...
   fun:xdg_mime_init
}
{
   glib/GResolver
   Memcheck:Leak
   ...
   fun:g_resolver_get_default
}
{
   glib/g_main_context_push_thread_default
   Memcheck:Leak
   ...
   fun:g_main_context_push_thread_default
}
{
   glib/g_socket_connection_factory
   Memcheck:Leak
   ...
   fun:g_socket_connection_factory_register_type
}
{
   glib/g_get_language_names
   Memcheck:Leak
   ...
   fun:g_get_language_names
}

# probably using uninitialized memory as padding or something
{
   gnutls/handshake
   Memcheck:Cond
   ...
   fun:gnutls_handshake
}

{
   libxml2/xmlInitParser
   Memcheck:Leak
   ...
   fun:xmlInitParser
}
{
   libxml2/xmlInitializeDict
   Memcheck:Leak
   ...
   fun:xmlInitializeDict
}
{
   libxml2/xmlInitCharEncodingHandlers
   Memcheck:Leak
   ...
   fun:xmlInitCharEncodingHandlers
}
{
   libsoup/gnutls_1
   Memcheck:Leak
   ...
   fun:soup_gnutls_init
}
{
   libsoup/gnutls_2
   Memcheck:Leak
   ...
   fun:init_dh_params
}
{
   libsoup/gnutls_mutexes
   Memcheck:Leak
   ...
   fun:gcry_pthread_mutex_init
}
{
   libsoup/interned_uri_schemes
   Memcheck:Leak
   ...
   fun:g_ascii_strdown
   fun:soup_uri_parse_scheme
}
{
   libsoup/interned_headers
   Memcheck:Leak
   ...
   fun:intern_header_name
}
   
##-----------------------------------------------------------------------------
#
# TrickPlay
#
##-----------------------------------------------------------------------------

{
   tp_init
   Memcheck:Leak
   fun:*alloc
   ...
   ...
   fun:tp_init_version
   ...
}
	
{
	g_type_add_interface_static
	Memcheck:Leak
	fun:*alloc
	...
	fun:g_type_add_interface_static
	...
}

{
   ioctl tp
   Memcheck:Param
   ioctl(generic)
   fun:ioctl
   ...
}

